name: Terraform

on:
  push:
#    branches:
#      - main

jobs:
  build:
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        erl_otp:
        - erl23.2.7.2-emqx-2
        os:
        - ubuntu20.04

    container: emqx/build-env:${{ matrix.erl_otp }}-${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: prepare
      run: |
        if make emqx-ee --dry-run > /dev/null 2>&1; then
          echo "https://ci%40emqx.io:${{ secrets.CI_GIT_TOKEN }}@github.com" > $HOME/.git-credentials
          git config --global credential.helper store
          echo "${{ secrets.CI_GIT_TOKEN }}" >> ./scripts/git-token
          echo "EMQX_NAME=emqx-ee" >> $GITHUB_ENV
        else
          echo "EMQX_NAME=emqx" >> $GITHUB_ENV
        fi
    - name: build zip packages
      run: make ${EMQX_NAME}-zip
    - name: build deb/rpm packages
      run: make ${EMQX_NAME}-pkg
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: rebar3.crashdump
        path: ./rebar3.crashdump
    - name: pakcages test
      run: |
        export CODE_PATH=$GITHUB_WORKSPACE
        .ci/build_packages/tests.sh
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}
        path: _packages/**/*.zip

  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    needs: build

    outputs:
      public_ip: ${{ steps.server_ip.outputs.public_ip }}
      private_ip: ${{ steps.server_ip.outputs.private_ip }}

    steps:
      - name: Download emqx package
      - uses: actions/download-artifact@v2
        with:
          name: emqx
          path: /tmp

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: emqx/tf-test-automation
          path: tf-test-automation

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ./tf-test-automation
        id: init
        run: terraform init

      - name: Terraform Validate
        working-directory: ./tf-test-automation
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: server_ip
        working-directory: ./tf-test-automation
        run: |
          terraform apply -auto-approve -var="key_name=aws-bench" -var="os=ubuntu" -var="region=ap-southeast-1" -var="emqx_lic=${{ secrets.EMQX_LIC }}" -var="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" -var="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" -var="private_key=${{ secrets.SSH_PRIVATE_KEY }}" -var="emqx_package=/tmp/emqx.zip"
          echo "::set-output name=public_ip::$(terraform output public_ip)"
          echo "::set-output name=private_ip::$(terraform output private_ip)"

      - name: Show ip
        run: |
          echo ${{ steps.server_ip.outputs.public_ip }}
          echo ${{ steps.server_ip.outputs.private_ip }}
